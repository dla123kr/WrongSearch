using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Linq;
using System.Text;
using System.Windows.Forms;

using System.Net;
using System.Net.Sockets;

namespace WrongSearch_Client.UC
{
    public partial class LoginUC : UserControl
    {
        public ClientForm clientForm = null;
        public bool connectOK = false;

        public LoginUC(ClientForm cf)
        {
            InitializeComponent();

            clientForm = cf;
        }

        // 서버연결을 시도합니다.
        private void btnConnect_Click(object sender, EventArgs e)
        {
            try
            {
                clientForm.clientSocket.Connect(tbIP.Text, 8088);

                SendConnect();
            }
            catch(Exception err)
            {
                // 입력한 아이피의 서버가 닫혀있을 경우
                MessageBox.Show("접속에 실패하셨습니다.", "알림", MessageBoxButtons.OK, MessageBoxIcon.Error);
                MessageBox.Show(err.ToString());
            }
        }

        public void ConnectTry()
        {
            if (connectOK)
            {
                MessageBox.Show("접속에 성공하셨습니다.", "알림", MessageBoxButtons.OK, MessageBoxIcon.Information);

                tbIP.Enabled = false;
                btnConnect.Enabled = false;

                tbClassNumber.Enabled = true;
                tbPassword.Enabled = true;
                btnLogin.Enabled = true;
                btnRegist.Enabled = true;
            }
            else
            {
                MessageBox.Show("최대인원을 초과하여 접속에 실패하셨습니다.", "알림", MessageBoxButtons.OK, MessageBoxIcon.Error);
                clientForm.Close();
            }
        }

        // 접속 버퍼를 보내어서, 최대 플레이어를 꽉채웠는지 아닌지를 체크합니다.
        private void SendConnect()
        {
            NetworkStream ns = clientForm.clientSocket.GetStream();

            // msg: connect√
            string msg = "connect√";
            byte[] buf = Encoding.UTF8.GetBytes(msg);

            ns.Write(buf, 0, buf.Length);
            ns.Flush();
        }

        // 회원가입 폼을 띄웁니다.
        private void btnRegist_Click(object sender, EventArgs e)
        {
            RegistForm rf = new RegistForm(clientForm.clientSocket);
            clientForm.registForm = rf;
            rf.ShowDialog();
        }

        // 로그인 시도을 시도합니다.
        private void btnLogin_Click(object sender, EventArgs e)
        {
            if (tbClassNumber.Text == "" || tbPassword.Text == "")
            {
                MessageBox.Show("학번과 비밀번호를 모두 입력해 주십시오.", "알림", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            SendLogin();
        }

        // 서버에 buffer를 보내 로그인을 시도
        private void SendLogin()
        {
            NetworkStream ns = clientForm.clientSocket.GetStream();

            // msg: login√학번√비밀번호√
            string msg = "login√" + tbClassNumber.Text + "√" + tbPassword.Text + "√";
            byte[] buf = Encoding.UTF8.GetBytes(msg);

            ns.Write(buf, 0, buf.Length);
            ns.Flush();
        }

        // 학번칸에 숫자만 입력되게 합니다.
        private void tbClassNumber_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!(char.IsDigit(e.KeyChar) || e.KeyChar == Convert.ToChar(Keys.Back)))
            {
                e.Handled = true;
            }
        }
    }
}
